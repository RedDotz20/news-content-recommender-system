'use client';
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/GXKt13phLGD
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from 'next/link';
import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';
import {
	NavigationMenu,
	NavigationMenuList,
	NavigationMenuLink,
} from '@/components/ui/navigation-menu';
import {
	DropdownMenu,
	DropdownMenuTrigger,
	DropdownMenuContent,
	DropdownMenuLabel,
	DropdownMenuSeparator,
	DropdownMenuItem,
} from '@/components/ui/dropdown-menu';
import { signOut, useSession } from 'next-auth/react';
import { Button, buttonVariants } from './ui/button';
import { ExitIcon, GearIcon } from '@radix-ui/react-icons';
import { ThemeToggle } from './theme/ThemeToggle';

export function HomeNav() {
	const { data: session } = useSession();

	return (
		<div className="flex flex-col w-full">
			<header className="bg-background px-4 py-3 shadow-sm sm:px-6 sm:py-4 md:px-8 md:py-5">
				<div className="container mx-auto flex items-center justify-between">
					<Link
						href="#"
						className="flex items-center gap-2"
						prefetch={false}
					>
						<span className="text-lg font-semibold">News Recommender</span>
					</Link>
					<nav className="hidden sm:flex items-center gap-4 text-sm font-medium">
						<NavigationMenu>
							<NavigationMenuList>
								<NavigationMenuLink asChild>
									<Link
										href="#"
										className="group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50"
										prefetch={false}
									>
										Home
									</Link>
								</NavigationMenuLink>
								<NavigationMenuLink asChild>
									<Link
										href="#"
										className="group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50"
										prefetch={false}
									>
										Newest
									</Link>
								</NavigationMenuLink>
								<NavigationMenuLink asChild>
									<Link
										href="#"
										className="group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50"
										prefetch={false}
									>
										Trending
									</Link>
								</NavigationMenuLink>
								<NavigationMenuLink asChild>
									<Link
										href="#"
										className="group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50"
										prefetch={false}
									>
										Popular
									</Link>
								</NavigationMenuLink>
							</NavigationMenuList>
						</NavigationMenu>
					</nav>
					<div className="flex gap-4">
						<ThemeToggle />
						{session ? (
							<DropdownMenu>
								<DropdownMenuTrigger asChild>
									<Button
										variant="outline"
										size="icon"
										className="overflow-hidden rounded-full"
									>
										<img
											src={session.user.image as string}
											width={36}
											height={36}
											alt="A"
											className="overflow-hidden rounded-full grid items-center"
											style={{ aspectRatio: '36/36', objectFit: 'cover' }}
										/>
									</Button>
								</DropdownMenuTrigger>
								<DropdownMenuContent align="end">
									<DropdownMenuLabel>
										<h3>{session.user.name}</h3>
										<h4 className="text-xs font-light">{session.user.email}</h4>
									</DropdownMenuLabel>
									<DropdownMenuSeparator />
									<DropdownMenuItem className="cursor-pointer">
										<GearIcon className="mr-2 h-4 w-4" />
										Profile
									</DropdownMenuItem>
									<DropdownMenuItem className="cursor-pointer">
										<GearIcon className="mr-2 h-4 w-4" />
										Settings
									</DropdownMenuItem>
									<DropdownMenuSeparator />
									<DropdownMenuItem
										className="cursor-pointer hover:bg-red-300/30"
										onClick={() =>
											signOut({
												redirect: true,
												callbackUrl: '/auth',
											})
										}
									>
										<ExitIcon className="mr-2 h-4 w-4" />
										Logout
									</DropdownMenuItem>
								</DropdownMenuContent>
							</DropdownMenu>
						) : (
							<Link
								className={buttonVariants()}
								href="/auth"
							>
								Sign in
							</Link>
						)}
					</div>
				</div>
			</header>
			<div className="sm:hidden">
				<nav className="fixed bottom-0 left-0 right-0 z-50 flex items-center justify-around bg-background py-2 shadow-t">
					<Link
						href="#"
						className="flex flex-col items-center gap-1 text-xs font-medium text-muted-foreground hover:text-foreground"
						prefetch={false}
					>
						<HomeIcon className="h-5 w-5" />
						Home
					</Link>
					<Link
						href="#"
						className="flex flex-col items-center gap-1 text-xs font-medium text-muted-foreground hover:text-foreground"
						prefetch={false}
					>
						<InfoIcon className="h-5 w-5" />
						Newest
					</Link>
					<Link
						href="#"
						className="flex flex-col items-center gap-1 text-xs font-medium text-muted-foreground hover:text-foreground"
						prefetch={false}
					>
						<BriefcaseIcon className="h-5 w-5" />
						Trending
					</Link>
					<Link
						href="#"
						className="flex flex-col items-center gap-1 text-xs font-medium text-muted-foreground hover:text-foreground"
						prefetch={false}
					>
						<PhoneIcon className="h-5 w-5" />
						Popular
					</Link>
				</nav>
			</div>
		</div>
	);
}

function BriefcaseIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<path d="M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
			<rect
				width="20"
				height="14"
				x="2"
				y="6"
				rx="2"
			/>
		</svg>
	);
}

function HomeIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
			<polyline points="9 22 9 12 15 12 15 22" />
		</svg>
	);
}

function InfoIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<circle
				cx="12"
				cy="12"
				r="10"
			/>
			<path d="M12 16v-4" />
			<path d="M12 8h.01" />
		</svg>
	);
}

function MenuIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<line
				x1="4"
				x2="20"
				y1="12"
				y2="12"
			/>
			<line
				x1="4"
				x2="20"
				y1="6"
				y2="6"
			/>
			<line
				x1="4"
				x2="20"
				y1="18"
				y2="18"
			/>
		</svg>
	);
}

function PhoneIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
		</svg>
	);
}
